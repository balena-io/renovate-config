{
  "extends": [
    ":preserveSemverRanges",
    "config:base",
    "docker:enableMajor",
    "github>balena-io/renovate-config//.github/renovate"
  ],
  "printConfig": true,
  "prHourlyLimit": 0,
  "onboarding": false,
  "requireConfig": false,
  "cloneSubmodules": true,
  "rebaseWhen": "behind-base-branch",
  "git-submodules": {
    "enabled": true
  },
  "labels": [
    "renovate",
    "dependencies"
  ],
  "automergeComment": "@balena-ci I self-certify!",
  "automergeType": "pr-comment",
  "commitMessageExtra": "to {{{replace 'v' '' newVersion}}}",
  "commitBody": "Update {{depName}} to {{{replace 'v' '' newVersion}}}\n\nUpdate {{depName}} from {{{replace 'v' '' currentVersion}}} to {{{replace 'v' '' newVersion}}}\n\nChange-type: {{#if (or isPatch (containsString depType 'devDependencies'))}}patch{{else}}minor{{/if}}",
  "prConcurrentLimit": 2,
  "branchConcurrentLimit": 2,
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/test/**",
    "**/tests/suites/**",
    "**/__fixtures__/**",
    "**/Dockerfile.template"
  ],
  "repositories": [

    "balena-io-modules/abstract-sql-compiler",
    "balena-io-modules/abstract-sql-to-typescript",
    "balena-io-modules/odata-to-abstract-sql",
    "balena-io-modules/drivelist",
    "balena-io-modules/etcher-sdk",
    "balena-io-modules/lf-to-abstract-sql",
    "balena-io-modules/node-beaglebone-usbboot",
    "balena-io-modules/open-balena-base",
    "balena-io-modules/sbvr-types",
    "balena-io-modules/sbvr-parser",
    "balena-io-modules/scrutinizer",
    "balena-io-modules/winusb-driver-generator",
    "balena-io-modules/mocha-pod",


    "balena-io-examples/balena-python-hello-world",


    "balena-io/analytics-backend",
    "balena-io/autohat",
    "balena-io/balena-alertmanager",
    "balena-io/balena-api",
    "balena-io/balena-builder",
    "balena-io/balena-cloud",
    "balena-io/balena-delta",
    "balena-io/balena-git",
    "balena-io/balena-img",
    "balena-io/balena-mdns-publisher",
    "balena-io/balena-metrics-guard-base",
    "balena-io/balena-monitor",
    "balena-io/balena-proxy",
    "balena-io/balena-sentry",
    "balena-io/ca-private",
    "balena-io/cert-manager",
    "balena-io/deploy-to-balena-action",
    "balena-io/e2e",
    "balena-io/pinejs",
    "balena-io/open-balena-api",
    "balena-io/open-balena-db",
    "balena-io/open-balena-haproxy",
    "balena-io/open-balena-registry-proxy",
    "balena-io/open-balena-registry",
    "balena-io/open-balena-s3",
    "balena-io/open-balena-vpn",
    "balena-io/open-balena",
    "balena-io/renovate-config",
    "balena-io/versionist",


    "balena-os/cloud-config",
    "balena-os/wifi-connect",


    "balenalabs/proxy-tunnel",


    "product-os/balena-cloudwatch-exporter",
    "product-os/balena-jenkins",
    "product-os/balena-redis-exporter",
    "product-os/balena-versionist",
    "product-os/resinci-deploy",
    "product-os/versionbot"

  ],
  "packageRules": [
    {
      "automerge": true,
      "matchUpdateTypes": [
        "minor",
        "patch"
      ]
    },
    {
      "matchDepTypes": [
        "devDependencies"
      ],
      "automerge": true
    },
    {
      "matchManagers": [
        "git-submodules"
      ],
      "automerge": true,
      "matchUpdateTypes": [
        "minor",
        "patch",
        "digest"
      ]
    },
    {
      "automerge": false,
      "matchPackageNames": ["@balena/open-balena-api"],
      "matchUpdateTypes": ["minor"]
    }
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "(^|\\/)Dockerfile(\\.[:alnum:]+)?$"
      ],
      "matchStrings": [
        "ENV NODE_VERSION=(?<currentValue>.*?)\\n",
        "ARG NODE_VERSION=(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "node",
      "datasourceTemplate": "node"
    },
    {
      "fileMatch": [
        "(^|\\/)Dockerfile(\\.[[:alnum:]]+)?$"
      ],
      "matchStrings": [
        "ENV NPM_VERSION=(?<currentValue>.*?)\\n",
        "ARG NPM_VERSION=(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "npm",
      "datasourceTemplate": "npm"
    },
    {
      "fileMatch": [
        "(^|\\/)(?:docker-)?compose[^/]*\\.ya?ml$",
        "(^|\\/)Dockerfile(\\.[[:alnum:]]+)?$"
      ],
      "matchStrings": [
        "image: (?<depName>.*[^\\/])\\/(?<currentValue>.*?)\\n",
        "FROM (?<depName>.*[^\\/])\\/(?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "docker"
    }
  ]
}
