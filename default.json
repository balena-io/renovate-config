{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    ":preserveSemverRanges",
    "config:base",
    "docker:enableMajor",
    "helpers:pinGitHubActionDigests",
    "regexManagers:dockerfileVersions",
    "regexManagers:githubActionsVersions",
    "regexManagers:tfvarsVersions",
    ":automergeStableNonMajor",
    ":automergePatch",
    ":automergeDigest",
    "npm:unpublishSafe",
    ":semanticCommitsDisabled",
    ":separateMultipleMajorReleases"
  ],
  "onboarding": false,
  "requireConfig": "optional",
  "printConfig": true,
  "prHourlyLimit": 0,
  "cloneSubmodules": false,
  "rebaseWhen": "behind-base-branch",
  "git-submodules": {
    "enabled": true
  },
  "labels": ["renovate"],
  "commitBody": "Update {{depName}}\n\nChange-type: patch",
  "prConcurrentLimit": 3,
  "automerge": false,
  "automergeStrategy": "merge-commit",
  "pinDigest": {
    "commitBody": "Update {{depName}}\n\nChange-type: patch",
    "automerge": true
  },
  "digest": {
    "commitBody": "Update {{depName}}\n\nChange-type: patch",
    "automerge": true
  },
  "lockFileMaintenance": {
    "commitBody": "Update {{depName}}\n\nChange-type: patch",
    "enabled": true,
    "automerge": true
  },
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/tests/**",
    "**/__fixtures__/**"
  ],
  "packageRules": [
    {
      "matchUpdateTypes": ["major", "minor", "patch"],
      "commitBody": "Update {{depName}} from {{{replace 'v' '' currentVersion}}} to {{{replace 'v' '' newVersion}}}\n\nChange-type: patch"
    },
    {
      "groupName": "{{{replace '^@types/' '' depName}}}",
      "matchPackagePrefixes": ["@types/"],
      "matchDepTypes": ["dependencies", "devDependencies"],
      "matchDatasources": ["npm"]
    },
    {
      "groupName": "{{depName}}",
      "excludePackagePrefixes": ["@types/"],
      "matchDepTypes": ["dependencies", "devDependencies"],
      "matchDatasources": ["npm"]
    },
    {
      "matchUpdateTypes": ["minor", "patch"],
      "matchCurrentVersion": "!/^v?0/",
      "automerge": true
    },
    {
      "matchRepositories": ["balena-io/balena-ui"],
      "commitBody": "Update {{depName}}\n\nChangelog-entry: Update {{depName}}\nChange-type: patch"
    },
    {
      "matchPackagePatterns": ["^husky$"],
      "matchUpdateTypes": ["major"],
      "matchNewValue": "/^[\\^~v]?9\\./",
      "postUpgradeTasks": {
        "commands": [
          "node -e \"eval(Buffer.from('Y29uc3QgZnMgPSByZXF1aXJlKCJmcyIpOwoKLy8gRGVmaW5lIGEgcmVnZXggdG8gbWF0Y2ggdGhlIG9sZCBwcmVwYXJlIHNjcmlwdCBhbmQgYW55IHRyYWlsaW5nIHRleHQKY29uc3Qgb2xkUHJlcGFyZVJlZ2V4ID0gL15ub2RlIC1lICJ0cnkgeyByZXF1aXJlXCgnaHVza3knXClcLmluc3RhbGxcKFwpIH0gY2F0Y2ggXChlXCkge2lmIFwoZVwuY29kZSAhPT0gJ01PRFVMRV9OT1RfRk9VTkQnXCkgdGhyb3cgZX0iKC4qKSQvOwoKLy8gVXBkYXRlIHBhY2thZ2UuanNvbgpjb25zdCBwYWNrYWdlSnNvblBhdGggPSAicGFja2FnZS5qc29uIjsKY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKHBhY2thZ2VKc29uUGF0aCwgInV0ZjgiKSk7CmNvbnN0IG1hdGNoID0gZGF0YS5zY3JpcHRzLnByZXBhcmUubWF0Y2gob2xkUHJlcGFyZVJlZ2V4KTsKaWYgKG1hdGNoKSB7CiAgY29uc3QgdHJhaWxpbmdUZXh0ID0gbWF0Y2hbMV07CiAgZGF0YS5zY3JpcHRzLnByZXBhcmUgPSBgbm9kZSAtZSAidHJ5IHsgKGF3YWl0IGltcG9ydCgnaHVza3knKSkuZGVmYXVsdCgpIH0gY2F0Y2ggKGUpIHsgaWYgKGUuY29kZSAhPT0gJ0VSUl9NT0RVTEVfTk9UX0ZPVU5EJykgdGhyb3cgZSB9IiAtLWlucHV0LXR5cGUgbW9kdWxlJHt0cmFpbGluZ1RleHR9YDsKfQovLyBFbnN1cmluZyB0aGVyZSBpcyBhIG5ld2xpbmUgYXQgdGhlIGVuZCB3aGVuIHdyaXRpbmcgdG8gJ3BhY2thZ2UuanNvbicKZnMud3JpdGVGaWxlU3luYyhwYWNrYWdlSnNvblBhdGgsIEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpICsgIlxuIik7CgovLyBVcGRhdGUgLmh1c2t5L3ByZS1jb21taXQKY29uc3QgcHJlQ29tbWl0UGF0aCA9ICIuaHVza3kvcHJlLWNvbW1pdCI7CmlmIChmcy5leGlzdHNTeW5jKHByZUNvbW1pdFBhdGgpKSB7CiAgbGV0IGNvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmMocHJlQ29tbWl0UGF0aCwgInV0ZjgiKTsKICBjb25zdCBsaW5lc1RvUmVtb3ZlID0gWwogICAgIiMhL3Vzci9iaW4vZW52IHNoIiwKICAgICcuICIkKGRpcm5hbWUgLS0gIiQwIikvXy9odXNreS5zaCInLAogIF07CiAgY29udGVudCA9IGNvbnRlbnQKICAgIC5zcGxpdCgiXG4iKQogICAgLmZpbHRlcigobGluZSkgPT4gIWxpbmVzVG9SZW1vdmUuaW5jbHVkZXMobGluZSkpCiAgICAuam9pbigiXG4iKTsKICBmcy53cml0ZUZpbGVTeW5jKHByZUNvbW1pdFBhdGgsIGNvbnRlbnQpOwp9Cg==', 'base64').toString('utf-8'))\""
        ],
        "fileFilters": ["package.json", ".husky/pre-commit"]
      }
    }
  ]
}
